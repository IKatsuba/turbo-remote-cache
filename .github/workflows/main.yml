name: Lint, Test and Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  release:
    types: [published]
  pull_request:
    branches:
      - 'main'

jobs:
  checks:
    name: Main Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.2.6
      - name: Run lint
        run: deno lint
      - name: Run format check
        run: deno fmt --check
  e2e:
    name: Test Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.2.6
      - name: Run MinIO
        run: |
          docker compose up -d
          deno --no-lock -A npm:wait-on http://localhost:9000/minio/health/live
      - name: Run tests
        run: |
          deno task test
      - name: Run MinIO down
        run: |
          docker compose down
  publish:
    runs-on: ubuntu-latest
    needs:
      - e2e
      - checks
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ikatsuba/turborepo-cache-server
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64/v8
